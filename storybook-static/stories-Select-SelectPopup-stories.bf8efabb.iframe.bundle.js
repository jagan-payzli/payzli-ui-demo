"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[894],{"./src/stories/Select/SelectPopup.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/index.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_phosphor_icons_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@phosphor-icons/react/dist/csr/CaretDown.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"payzli-ui/Components/Select/SelectPopup",component:_components__WEBPACK_IMPORTED_MODULE_0__.x8,tags:["autodocs","test"],parameters:{layout:"centered",docs:{description:{component:"Use this component for showing select options in a popup for button or an icon."}}},argTypes:{value:{control:{type:"object"},description:"The currently selected value.",table:{defaultValue:{summary:"null"},type:{summary:"ISelectInput"}}},setValue:{action:"setValue",description:"Function to update the selected value.",table:{type:{summary:"(value: ISelectInput) => void"}}},target:{control:{type:"object"},description:"The React node that triggers the popup.",table:{defaultValue:{summary:"three dots"},type:{summary:"React.ReactNode"}}},selectOptions:{control:{type:"object"},description:"Array of selectable options.",table:{type:{summary:"ISelectInput[]"},defaultValue:{summary:"[]"}}},selectStyles:{control:{type:"object"},description:"Styles for customizing the select dropdown."},popupParentClass:{control:{type:"text"},description:"CSS class for the parent of the popup."},CustomOption:{control:{type:"object"},description:"Custom component for rendering options."},ref:{control:{type:"object"},description:"Ref for the component."},isLoading:{control:{type:"boolean"},description:"Indicates if the popup is in a loading state inside select input."},handlePopupVisible:{action:"handlePopupVisible",description:"Callback to handle popup visibility state.",table:{type:{summary:"(visible: boolean) => void"}}}}},options=[{label:"USD",value:"USD",code:"USD",symbol:"$"},{label:"INR",value:"INR",code:"INR",symbol:"â‚¹"}],Default=(args=>{const[selected,setSelected]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_components__WEBPACK_IMPORTED_MODULE_0__.x8,{...args,value:selected,setValue:setSelected,selectOptions:options})}).bind({});Default.args={popupParentClass:"mt-1",target:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_components__WEBPACK_IMPORTED_MODULE_0__.$n,{label:"Select",variant:"secondary",iconPosition:"right",rightIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_phosphor_icons_react__WEBPACK_IMPORTED_MODULE_3__.a,{weight:"bold"}),onClick:()=>{}})};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(args: IPopupSelect) => {\n  const [selected, setSelected] = useState<ISelectInput | null>(null);\n  return <PopupSelect {...args} value={selected} setValue={setSelected} selectOptions={options} />;\n}",...Default.parameters?.docs?.source}}}}}]);