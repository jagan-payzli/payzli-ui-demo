"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[673],{"./src/stories/InputFields/AmountInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DisabledAmountInput:()=>DisabledAmountInput,ReadOnlyAmountInput:()=>ReadOnlyAmountInput,SimpleAmountInput:()=>SimpleAmountInput,WithDefaultCurrency:()=>WithDefaultCurrency,WithNegativeValue:()=>WithNegativeValue,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _main__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/main.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const currencyOptions=[{label:"USD",value:"USD",symbol:"$"},{label:"INR",value:"INR",symbol:"₹"},{label:"EUR",value:"EUR",symbol:"€"},{label:"GBP",value:"GBP",symbol:"£"},{label:"JPY",value:"JPY",symbol:"¥"},{label:"AUD",value:"AUD",symbol:"$"},{label:"CAD",value:"CAD",symbol:"$"},{label:"CHF",value:"CHF",symbol:"CHF"},{label:"CNY",value:"CNY",symbol:"¥"}],__WEBPACK_DEFAULT_EXPORT__={title:"payzli-ui/Components/InputFields/AmountInput",component:_main__WEBPACK_IMPORTED_MODULE_0__.J$,name:"InputField",tags:["autodocs","test"],parameters:{layout:"centered"},argTypes:{id:{control:{type:"text"}},value:{control:{type:"text"}},onChange:{action:"onChange",description:"Callback function triggered when the input value changes.",table:{type:{summary:"(e: React.ChangeEvent<HTMLInputElement>) => void"}}},name:{control:{type:"text"},description:"Name attribute of the input field."},label:{control:{type:"text"}},placeholder:{control:{type:"text"}},required:{control:{type:"boolean"}},className:{control:{type:"text"}},formClass:{control:{type:"text"},description:"CSS class for the form wrapping the input field."},formSubmitted:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},disabled:{control:{type:"boolean"},table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},decimalPlace:{control:{type:"number"},description:"Number of decimal places allowed."},min:{control:{type:"number"},description:"Minimum value allowed."},max:{control:{type:"number"},description:"Maximum value allowed."},onFocus:{action:"onFocus",description:"Callback function called when the input field is focused."},onBlur:{action:"onBlur",description:"Callback function called when the input field loses focus."},isError:{control:!1,description:"Callback function to determine if there's an error."},allowNegative:{control:{type:"boolean"},description:"Allows negative values."},skipValidation:{control:{type:"boolean"},description:"Skips input validation."},disableWarning:{control:{type:"boolean"},description:"Disables warning messages."},readOnly:{control:{type:"boolean"},description:"Sets the input field to read-only mode."},autoFocus:{control:{type:"boolean"},description:"Automatically focuses the input field on mount."},tooltip:{control:{type:"text"},description:"Tooltip text for the input field."},hintText:{control:{type:"text"},description:"Hint text displayed below the input field."},errorMessage:{control:{type:"text"},description:"Error message displayed for the input field."},UiLanguage:{control:{type:"text"},description:"UI language for the input field."},thousandSeparator:{control:{type:"boolean"},description:"Enables thousand separators for numeric input."},thousandsGroupStyle:{control:{type:"inline-radio"},options:["thousand","lakh","wan"],description:"Style of thousands grouping."},handleSelectCurrency:{action:"handleSelectCurrency",description:"Callback function for selecting a currency."},currencyOptions:{description:"List of currency options. ISelectInput[]"},selectedCurrency:{control:{type:"object"},description:"Currently selected currency."},popupParentClass:{control:{type:"text"},description:"CSS class for the popup parent element."},isLoading:{control:{type:"boolean"},description:"Indicates if data is loading in popup."},disableCurrency:{control:{type:"boolean"},description:"Disables currency selection."},transformPhrase:{description:"transformPhrase method to transform few row texts with the help of UI language",table:{type:{summary:"(phrase: string, UiLanguage: string, {}: options) => string"}}}}},Template=args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("1000000"),[selectedCurrency,setSelectedCurrency]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.selectedCurrency);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_main__WEBPACK_IMPORTED_MODULE_0__.J$,{...args,value,onChange:event=>{setValue(event.target.value)},selectedCurrency,handleSelectCurrency:setSelectedCurrency,currencyOptions})},SimpleAmountInput=Template.bind({});SimpleAmountInput.args={id:"amount",label:"Amount",placeholder:"write...",sectionType:"right",name:"amount",className:"m-0",formClass:"",required:!1,formSubmitted:!0,decimalPlace:3,tooltip:"Note: pass sectionRightIcon & sectionType='right'"};const DisabledAmountInput=Template.bind({});DisabledAmountInput.args={id:"amount",label:"Amount",placeholder:"write...",sectionType:"right",name:"amount",className:"m-0",formClass:"",required:!1,formSubmitted:!0,decimalPlace:3,disabled:!0,disableCurrency:!0,tooltip:"Note: pass sectionRightIcon & sectionType='right'"};const ReadOnlyAmountInput=Template.bind({});ReadOnlyAmountInput.args={id:"amount",label:"Amount",placeholder:"write...",sectionType:"right",name:"amount",className:"m-0",formClass:"",required:!1,formSubmitted:!0,decimalPlace:2,readOnly:!0,tooltip:"Note: pass sectionRightIcon & sectionType='right'"};const WithNegativeValue=Template.bind({});WithNegativeValue.args={id:"amount",label:"Amount",placeholder:"write...",sectionType:"right",name:"amount",className:"m-0",formClass:"",required:!1,formSubmitted:!0,decimalPlace:2,allowNegative:!0,tooltip:"Note: pass sectionRightIcon & sectionType='right'"};const WithDefaultCurrency=Template.bind({});WithDefaultCurrency.args={id:"amount",label:"Amount",placeholder:"write...",sectionType:"right",name:"amount",className:"m-0",formClass:"",required:!1,formSubmitted:!0,decimalPlace:2,selectedCurrency:currencyOptions[1],tooltip:"Note: pass sectionRightIcon & sectionType='right'"};const __namedExportsOrder=["SimpleAmountInput","DisabledAmountInput","ReadOnlyAmountInput","WithNegativeValue","WithDefaultCurrency"];SimpleAmountInput.parameters={...SimpleAmountInput.parameters,docs:{...SimpleAmountInput.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState("1000000");\n  const [selectedCurrency, setSelectedCurrency] = useState(args.selectedCurrency);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <AmountInput {...args} value={value} onChange={handleChange} selectedCurrency={selectedCurrency} handleSelectCurrency={setSelectedCurrency} currencyOptions={currencyOptions} />;\n}',...SimpleAmountInput.parameters?.docs?.source}}},DisabledAmountInput.parameters={...DisabledAmountInput.parameters,docs:{...DisabledAmountInput.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState("1000000");\n  const [selectedCurrency, setSelectedCurrency] = useState(args.selectedCurrency);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <AmountInput {...args} value={value} onChange={handleChange} selectedCurrency={selectedCurrency} handleSelectCurrency={setSelectedCurrency} currencyOptions={currencyOptions} />;\n}',...DisabledAmountInput.parameters?.docs?.source}}},ReadOnlyAmountInput.parameters={...ReadOnlyAmountInput.parameters,docs:{...ReadOnlyAmountInput.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState("1000000");\n  const [selectedCurrency, setSelectedCurrency] = useState(args.selectedCurrency);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <AmountInput {...args} value={value} onChange={handleChange} selectedCurrency={selectedCurrency} handleSelectCurrency={setSelectedCurrency} currencyOptions={currencyOptions} />;\n}',...ReadOnlyAmountInput.parameters?.docs?.source}}},WithNegativeValue.parameters={...WithNegativeValue.parameters,docs:{...WithNegativeValue.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState("1000000");\n  const [selectedCurrency, setSelectedCurrency] = useState(args.selectedCurrency);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <AmountInput {...args} value={value} onChange={handleChange} selectedCurrency={selectedCurrency} handleSelectCurrency={setSelectedCurrency} currencyOptions={currencyOptions} />;\n}',...WithNegativeValue.parameters?.docs?.source}}},WithDefaultCurrency.parameters={...WithDefaultCurrency.parameters,docs:{...WithDefaultCurrency.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState("1000000");\n  const [selectedCurrency, setSelectedCurrency] = useState(args.selectedCurrency);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <AmountInput {...args} value={value} onChange={handleChange} selectedCurrency={selectedCurrency} handleSelectCurrency={setSelectedCurrency} currencyOptions={currencyOptions} />;\n}',...WithDefaultCurrency.parameters?.docs?.source}}}},"./src/main.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$n:()=>_components__WEBPACK_IMPORTED_MODULE_0__.$n,BI:()=>_components__WEBPACK_IMPORTED_MODULE_0__.BI,E$:()=>_components__WEBPACK_IMPORTED_MODULE_0__.E$,FO:()=>_components__WEBPACK_IMPORTED_MODULE_0__.FO,J$:()=>_components__WEBPACK_IMPORTED_MODULE_0__.J$,K0:()=>_components__WEBPACK_IMPORTED_MODULE_0__.K0,N:()=>_components__WEBPACK_IMPORTED_MODULE_0__.N,Pw:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Pw,Q7:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Q7,TM:()=>_components__WEBPACK_IMPORTED_MODULE_0__.TM,VV:()=>_components__WEBPACK_IMPORTED_MODULE_0__.VV,Z7:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Z7,Zp:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Zp,eu:()=>_components__WEBPACK_IMPORTED_MODULE_0__.eu,nD:()=>_components__WEBPACK_IMPORTED_MODULE_0__.nD,o5:()=>_components__WEBPACK_IMPORTED_MODULE_0__.o5,oz:()=>_components__WEBPACK_IMPORTED_MODULE_0__.oz,tU:()=>_components__WEBPACK_IMPORTED_MODULE_0__.tU,yL:()=>_components__WEBPACK_IMPORTED_MODULE_0__.yL});var _components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/index.ts")}}]);