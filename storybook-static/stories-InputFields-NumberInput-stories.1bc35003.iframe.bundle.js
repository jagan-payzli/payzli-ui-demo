"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[511],{"./src/stories/InputFields/NumberInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{NumberInputCurrency:()=>NumberInputCurrency,NumberInputDisabled:()=>NumberInputDisabled,NumberInputOptional:()=>NumberInputOptional,NumberInputPercentage:()=>NumberInputPercentage,NumberInputReadOnly:()=>NumberInputReadOnly,NumberInputRequired:()=>NumberInputRequired,NumberInputWithErrorMessage:()=>NumberInputWithErrorMessage,NumberInputWithHintText:()=>NumberInputWithHintText,NumberInputWithMaxLength:()=>NumberInputWithMaxLength,NumberInputWithMinAndMax:()=>NumberInputWithMinAndMax,NumberInputWithSection:()=>NumberInputWithSection,NumberInputWithThousandSeparator:()=>NumberInputWithThousandSeparator,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _main__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/main.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"payzli-ui/Components/InputFields/NumberInput",component:_main__WEBPACK_IMPORTED_MODULE_0__.Q7,name:"InputField",tags:["autodocs","test"],parameters:{layout:"centered"},argTypes:{id:{control:{type:"text"}},value:{control:{type:"number"}},onChange:{action:"onChange",description:"Callback function triggered when the input value changes.",table:{type:{summary:"(e: React.ChangeEvent<HTMLInputElement>) => void"}}},name:{control:{type:"text"},description:"Name attribute of the input field."},label:{control:{type:"text"},description:"Label for the input field."},placeholder:{control:{type:"text"}},required:{control:{type:"boolean"},defaultValue:{summary:!0}},className:{control:{type:"text"}},formClass:{control:{type:"text"},description:"CSS class for the form wrapping the input field."},formSubmitted:{control:{type:"boolean"},defaultValue:{summary:!0},description:"Indicates if the form has been submitted."},disabled:{control:{type:"boolean"},defaultValue:{summary:!0}},min:{control:{type:"number"},description:"Minimum value allowed."},max:{control:{type:"number"},description:"Maximum value allowed."},icon:{control:{type:"inline-radio"},options:["currency","percentage"],description:"Icon type for the input field."},leftIcon:{control:{type:"object"},description:"React component or node to display as left icon."},onFocus:{action:"onFocus",description:"Callback function called when the input field is focused."},onBlur:{action:"onBlur",description:"Callback function called when the input field loses focus."},isError:{control:!1,description:"Callback function to determine if there's an error."},onContextMenu:{action:"onContextMenu",description:"Callback function called when the context menu is triggered."},allowNegative:{control:{type:"boolean"},description:"Allows negative values."},skipValidation:{control:{type:"boolean"},description:"Skips input validation."},disableWarning:{control:{type:"boolean"},description:"Disables warning messages."},readOnly:{control:{type:"boolean"},description:"Sets the input field to read-only mode but not disabled."},autoFocus:{control:{type:"boolean"}},minLength:{control:{type:"number"},description:"Minimum length for the input value."},maxLength:{control:{type:"number"},description:"Maximum length for the input value."},showMaxLength:{control:{type:"boolean"},description:"Shows the maximum length indicator."},tooltip:{control:{type:"text"}},hintText:{control:{type:"text"},description:"Hint text displayed below the input field."},errorMessage:{control:{type:"text"},description:"Error message displayed for the input field."},transformPhrase:{description:"transformPhrase method to transform few row texts with the help of UI language",table:{type:{summary:"(phrase: string, UiLanguage: string, {}: options) => string"}}},UiLanguage:{control:{type:"text"},description:"UI language for the input field."},ref:{control:{type:"object"},description:"Reference to the input field."},sectionType:{control:{type:"inline-radio"},options:["left","right","both"],description:"Section type for the input field. and pass the sectionLeftIcon and sectionRightIcon"},sectionLeftIcon:{control:{type:"object"},description:"React component or node to display as left section icon."},sectionRightIcon:{control:{type:"object"},description:"React component or node to display as right section icon."},leftIconClass:{control:{type:"text"}},inputType:{control:{type:"inline-radio"},options:["amount","number"],defaultValue:{summary:"number"},description:"Input type for the field."},thousandSeparator:{control:{type:"boolean"},defaultValue:{summary:!0},description:"Enables thousand separators for numeric input."},thousandsGroupStyle:{control:{type:"inline-radio"},options:["thousand","lakh","wan"],defaultValue:{summary:"thousand"},description:"Style of thousands grouping."}}},Template=args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.value);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_main__WEBPACK_IMPORTED_MODULE_0__.Q7,{...args,value,onChange:event=>{setValue(event.target.value)}})},NumberInputOptional=Template.bind({});NumberInputOptional.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here"};const NumberInputRequired=Template.bind({});NumberInputRequired.args={id:"text-input",name:"text-input",label:"Text Input",required:!0,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here"};const NumberInputDisabled=Template.bind({});NumberInputDisabled.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",disabled:!0};const NumberInputReadOnly=Template.bind({});NumberInputReadOnly.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",readOnly:!0};const NumberInputCurrency=Template.bind({});NumberInputCurrency.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",icon:"currency"};const NumberInputPercentage=Template.bind({});NumberInputPercentage.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",icon:"percentage"};const NumberInputWithSection=Template.bind({});NumberInputWithSection.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",sectionType:"both",sectionLeftIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{className:"px-2",children:"+"}),sectionRightIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{className:"px-2",children:"-"})};const NumberInputWithMaxLength=Template.bind({});NumberInputWithMaxLength.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",maxLength:10};const NumberInputWithMinAndMax=Template.bind({});NumberInputWithMinAndMax.args={id:"text-input",name:"text-input",label:"Text Input",required:!0,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",min:5,max:100};const NumberInputWithHintText=Template.bind({});NumberInputWithHintText.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",hintText:"This is a hint text"};const NumberInputWithErrorMessage=Template.bind({});NumberInputWithErrorMessage.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",errorMessage:"This is an error message"};const NumberInputWithThousandSeparator=Template.bind({});NumberInputWithThousandSeparator.args={id:"text-input",name:"text-input",label:"Text Input",required:!1,formSubmitted:!0,tooltip:"This is a tooltip",placeholder:"Enter text here",thousandSeparator:!0};const __namedExportsOrder=["NumberInputOptional","NumberInputRequired","NumberInputDisabled","NumberInputReadOnly","NumberInputCurrency","NumberInputPercentage","NumberInputWithSection","NumberInputWithMaxLength","NumberInputWithMinAndMax","NumberInputWithHintText","NumberInputWithErrorMessage","NumberInputWithThousandSeparator"];NumberInputOptional.parameters={...NumberInputOptional.parameters,docs:{...NumberInputOptional.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputOptional.parameters?.docs?.source}}},NumberInputRequired.parameters={...NumberInputRequired.parameters,docs:{...NumberInputRequired.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputRequired.parameters?.docs?.source}}},NumberInputDisabled.parameters={...NumberInputDisabled.parameters,docs:{...NumberInputDisabled.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputDisabled.parameters?.docs?.source}}},NumberInputReadOnly.parameters={...NumberInputReadOnly.parameters,docs:{...NumberInputReadOnly.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputReadOnly.parameters?.docs?.source}}},NumberInputCurrency.parameters={...NumberInputCurrency.parameters,docs:{...NumberInputCurrency.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputCurrency.parameters?.docs?.source}}},NumberInputPercentage.parameters={...NumberInputPercentage.parameters,docs:{...NumberInputPercentage.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputPercentage.parameters?.docs?.source}}},NumberInputWithSection.parameters={...NumberInputWithSection.parameters,docs:{...NumberInputWithSection.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputWithSection.parameters?.docs?.source}}},NumberInputWithMaxLength.parameters={...NumberInputWithMaxLength.parameters,docs:{...NumberInputWithMaxLength.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputWithMaxLength.parameters?.docs?.source}}},NumberInputWithMinAndMax.parameters={...NumberInputWithMinAndMax.parameters,docs:{...NumberInputWithMinAndMax.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputWithMinAndMax.parameters?.docs?.source}}},NumberInputWithHintText.parameters={...NumberInputWithHintText.parameters,docs:{...NumberInputWithHintText.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputWithHintText.parameters?.docs?.source}}},NumberInputWithErrorMessage.parameters={...NumberInputWithErrorMessage.parameters,docs:{...NumberInputWithErrorMessage.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputWithErrorMessage.parameters?.docs?.source}}},NumberInputWithThousandSeparator.parameters={...NumberInputWithThousandSeparator.parameters,docs:{...NumberInputWithThousandSeparator.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState(args.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <NumberInput {...args} value={value} onChange={handleChange} />;\n}",...NumberInputWithThousandSeparator.parameters?.docs?.source}}}},"./src/main.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$n:()=>_components__WEBPACK_IMPORTED_MODULE_0__.$n,BI:()=>_components__WEBPACK_IMPORTED_MODULE_0__.BI,E$:()=>_components__WEBPACK_IMPORTED_MODULE_0__.E$,FO:()=>_components__WEBPACK_IMPORTED_MODULE_0__.FO,J$:()=>_components__WEBPACK_IMPORTED_MODULE_0__.J$,K0:()=>_components__WEBPACK_IMPORTED_MODULE_0__.K0,N:()=>_components__WEBPACK_IMPORTED_MODULE_0__.N,Pw:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Pw,Q7:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Q7,TM:()=>_components__WEBPACK_IMPORTED_MODULE_0__.TM,VV:()=>_components__WEBPACK_IMPORTED_MODULE_0__.VV,Z7:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Z7,Zp:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Zp,eu:()=>_components__WEBPACK_IMPORTED_MODULE_0__.eu,nD:()=>_components__WEBPACK_IMPORTED_MODULE_0__.nD,o5:()=>_components__WEBPACK_IMPORTED_MODULE_0__.o5,oz:()=>_components__WEBPACK_IMPORTED_MODULE_0__.oz,tU:()=>_components__WEBPACK_IMPORTED_MODULE_0__.tU,yL:()=>_components__WEBPACK_IMPORTED_MODULE_0__.yL});var _components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/index.ts")}}]);