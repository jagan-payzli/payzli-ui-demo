"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[574],{"./src/stories/InputFields/PhoneNumberInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DisabledCurrency:()=>DisabledCurrency,PhoneNumber:()=>PhoneNumber,PhoneNumberDisabled:()=>PhoneNumberDisabled,PhoneNumberRequired:()=>PhoneNumberRequired,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_main__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/main.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"payzli-ui/Components/InputFields/PhoneNumberInput",component:_main__WEBPACK_IMPORTED_MODULE_1__.yL,name:"InputField",tags:["autodocs","test"],parameters:{layout:"centered"},argTypes:{handleSelectCountryCode:{action:"handleSelectCountryCode",description:"Callback function to handle the selection of a country code.",table:{category:"Country Code",type:{summary:"(value: ISelectInput) => void"}}},countryCodeOptions:{control:{type:"object"},description:"Array of country code options for the input.",defaultValue:{label:"US",value:"US",code:"+1"},table:{category:"Country Code",type:{summary:"ISelectInput[]"}}},selectedCountryCode:{control:{type:"object"},description:"Currently selected country code.",table:{category:"Country Code",type:{summary:"ISelectInput"}}},popupParentClass:{control:{type:"text"},description:"CSS class for the popup parent container.",table:{category:"Country Code"}},isLoading:{control:{type:"boolean"},description:"Indicates if the component is in a loading state."},disableCurrency:{control:{type:"boolean"},description:"Disables currency-related features."},id:{control:{type:"text"},description:"Unique identifier for the input field."},value:{control:{type:"text"},description:"The current value of the input field."},onChange:{action:"onChange",description:"Callback function called when the value changes.",table:{type:{summary:"(e: React.ChangeEvent<HTMLInputElement>) => void"}}},className:{control:{type:"text"},description:"CSS class for the input field."},required:{control:{type:"boolean"},description:"Indicates if the input field is required."},formSubmitted:{control:{type:"boolean"},description:"Indicates if the form has been submitted."},name:{control:{type:"text"},description:"Name attribute of the input field."},label:{control:{type:"text"},description:"Label for the input field."},errorMessage:{control:{type:"text"},description:"Error message displayed for the input field."},formClass:{control:{type:"text"},description:"CSS class for the form wrapping the input field."},onFocus:{action:"onFocus",description:"Callback function called when the input field is focused.",table:{type:{summary:"(e: React.FocusEvent<HTMLInputElement>) => void"}}},onBlur:{action:"onBlur",description:"Callback function called when the input field loses focus.",table:{type:{summary:"(e: React.FocusEvent<HTMLInputElement>) => void"}}},disabled:{control:{type:"boolean"},description:"Disables the input field."},placeholder:{control:{type:"text"},description:"Placeholder text for the input field."},isError:{action:"isError",description:"Callback function to determine if there's an error.",table:{type:{summary:"(err: { [name: string]: string }) => void"}}},skipValidation:{control:{type:"boolean"},description:"Skips input validation."},transformPhrase:{action:"transformPhrase",description:"Function to transform phrases.",table:{type:{summary:"(phrase: string, UiLanguage: string, params: any) => string"}}},UiLanguage:{control:{type:"text"},description:"UI language for the input field."},tooltip:{control:{type:"text"},description:"Tooltip text for the input field."},hintText:{control:{type:"text"},description:"Hint text displayed below the input field."},mask:{control:{type:"text"},description:"Mask pattern for the input field."},".py_icon_color":{description:"Country code button caret icon class.",defaultValue:{summary:"#98a2b3"},table:{category:"Styling",type:"color"}},".py_currency_code":{description:"Country code typography class.",defaultValue:{summary:""},table:{category:"Styling",type:"class"}},".py_currency_code_btn":{description:"Country code button class.",defaultValue:{summary:""},table:{category:"Styling",type:"class"}}}},countryCodeOptions=[{value:"US",label:"US",code:"+1",format:"+1 (###) ###-####",country:"United States"},{value:"IN",label:"IN",code:"+91",format:"+91 (###) ###-####",country:"India"},{value:"UK",label:"UK",code:"+44",format:"+44 (###) ###-####",country:"United Kingdom"},{value:"JP",label:"JP",code:"+81",format:"+81 (###) ###-####",country:"Japan"},{value:"AU",label:"AU",code:"+61",format:"+61 (###) ###-####",country:"Australia"}],Template=args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[selectedCountry,setSelectedCountry]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(countryCodeOptions[0]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_main__WEBPACK_IMPORTED_MODULE_1__.yL,{...args,value,onChange:event=>{setValue(event.target.value)},selectedCountryCode:selectedCountry,placeholder:selectedCountry.format||"Enter phone number",countryCodeOptions,handleSelectCountryCode:setSelectedCountry})},PhoneNumber=Template.bind({});PhoneNumber.args={id:"phoneNumber",name:"phoneNumber",label:"PhoneNumber Input",className:"",required:!1,formSubmitted:!0,tooltip:"Note: pass sectionLeftIcon & sectionType='left'"};const PhoneNumberRequired=Template.bind({});PhoneNumberRequired.args={id:"phoneNumber",name:"phoneNumber",label:"PhoneNumber Input",className:"",required:!0,formSubmitted:!0,tooltip:"Note: pass sectionLeftIcon & sectionType='left'"};const PhoneNumberDisabled=Template.bind({});PhoneNumberDisabled.args={id:"phoneNumber",name:"phoneNumber",label:"PhoneNumber Input",className:"",required:!1,formSubmitted:!0,disabled:!0,disableCurrency:!0,tooltip:"Note: pass sectionLeftIcon & sectionType='left'"};const DisabledCurrency=Template.bind({});DisabledCurrency.args={id:"phoneNumber",name:"phoneNumber",label:"PhoneNumber Input",className:"",required:!1,formSubmitted:!0,disableCurrency:!0,placeholder:"Enter phone number",tooltip:"Note: pass sectionLeftIcon & sectionType='left'"};const __namedExportsOrder=["PhoneNumber","PhoneNumberRequired","PhoneNumberDisabled","DisabledCurrency"];PhoneNumber.parameters={...PhoneNumber.parameters,docs:{...PhoneNumber.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState<string>("");\n  const [selectedCountry, setSelectedCountry] = useState<ISelectInput>(countryCodeOptions[0]);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <PhoneNumberInput {...args} value={value} onChange={handleChange} selectedCountryCode={selectedCountry} placeholder={selectedCountry.format || "Enter phone number"} countryCodeOptions={countryCodeOptions} handleSelectCountryCode={setSelectedCountry} />;\n}',...PhoneNumber.parameters?.docs?.source}}},PhoneNumberRequired.parameters={...PhoneNumberRequired.parameters,docs:{...PhoneNumberRequired.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState<string>("");\n  const [selectedCountry, setSelectedCountry] = useState<ISelectInput>(countryCodeOptions[0]);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <PhoneNumberInput {...args} value={value} onChange={handleChange} selectedCountryCode={selectedCountry} placeholder={selectedCountry.format || "Enter phone number"} countryCodeOptions={countryCodeOptions} handleSelectCountryCode={setSelectedCountry} />;\n}',...PhoneNumberRequired.parameters?.docs?.source}}},PhoneNumberDisabled.parameters={...PhoneNumberDisabled.parameters,docs:{...PhoneNumberDisabled.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState<string>("");\n  const [selectedCountry, setSelectedCountry] = useState<ISelectInput>(countryCodeOptions[0]);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <PhoneNumberInput {...args} value={value} onChange={handleChange} selectedCountryCode={selectedCountry} placeholder={selectedCountry.format || "Enter phone number"} countryCodeOptions={countryCodeOptions} handleSelectCountryCode={setSelectedCountry} />;\n}',...PhoneNumberDisabled.parameters?.docs?.source}}},DisabledCurrency.parameters={...DisabledCurrency.parameters,docs:{...DisabledCurrency.parameters?.docs,source:{originalSource:'args => {\n  const [value, setValue] = useState<string>("");\n  const [selectedCountry, setSelectedCountry] = useState<ISelectInput>(countryCodeOptions[0]);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n  return <PhoneNumberInput {...args} value={value} onChange={handleChange} selectedCountryCode={selectedCountry} placeholder={selectedCountry.format || "Enter phone number"} countryCodeOptions={countryCodeOptions} handleSelectCountryCode={setSelectedCountry} />;\n}',...DisabledCurrency.parameters?.docs?.source}}}},"./src/main.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$n:()=>_components__WEBPACK_IMPORTED_MODULE_0__.$n,BI:()=>_components__WEBPACK_IMPORTED_MODULE_0__.BI,E$:()=>_components__WEBPACK_IMPORTED_MODULE_0__.E$,FO:()=>_components__WEBPACK_IMPORTED_MODULE_0__.FO,J$:()=>_components__WEBPACK_IMPORTED_MODULE_0__.J$,K0:()=>_components__WEBPACK_IMPORTED_MODULE_0__.K0,N:()=>_components__WEBPACK_IMPORTED_MODULE_0__.N,Pw:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Pw,Q7:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Q7,TM:()=>_components__WEBPACK_IMPORTED_MODULE_0__.TM,VV:()=>_components__WEBPACK_IMPORTED_MODULE_0__.VV,Z7:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Z7,Zp:()=>_components__WEBPACK_IMPORTED_MODULE_0__.Zp,eu:()=>_components__WEBPACK_IMPORTED_MODULE_0__.eu,nD:()=>_components__WEBPACK_IMPORTED_MODULE_0__.nD,o5:()=>_components__WEBPACK_IMPORTED_MODULE_0__.o5,oz:()=>_components__WEBPACK_IMPORTED_MODULE_0__.oz,tU:()=>_components__WEBPACK_IMPORTED_MODULE_0__.tU,yL:()=>_components__WEBPACK_IMPORTED_MODULE_0__.yL});var _components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/index.ts")}}]);